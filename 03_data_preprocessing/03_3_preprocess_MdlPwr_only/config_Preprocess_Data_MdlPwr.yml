# Preprocess_Data_FCNN_MdlBatPwr.py
env_name: env_aitm                                    # tf2.3
seed: !!int 43

# working_directory: eh_masterarbeit
input_path: 02_dataset/Mdl_Pwr/AitmContsHorzn_sindelfingen

# für Mdl_Pwr
input_names:
  sample:
    VSlopAFinPosn: sample_AitmContnsHorzn_VSlopAFinPosnAry200.csv
    SlopFinVal: sample_AitmContnsHorzn_SlopFinValAry200.csv
    VFinVal: sample_AitmContnsHorzn_VFinValAry200.csv
    AFinVal: sample_AitmContnsHorzn_AFinValAry200.csv
    Tm_AmbAirP: sample_Tm_AmbAirP.csv
    VSlopAFinVectLen: sample_AitmContnsHorzn_VSlopAFinVectLen.csv
    Tm_AmbAirTp: sample_Tm_AmbAirTp.csv
    MVeh: sample_AitmCmn_MVeh.csv
    Cod_Diff_Ratio_Calc: sample_Cod_Diff_Ratio_Calc.csv
    CurbWeight: sample_CurbWeight.csv
    WhlPA_Circumfer: sample_WhlPA_Circumfer.csv
  label:
    NEng: label_AitmContnsHorzn_NEngAry200.csv
    T: label_AitmContnsHorzn_TAry200.csv
    TqEng: label_AitmContnsHorzn_TqEngAry200.csv
    VVeh: label_AitmContnsHorzn_VVehAry200.csv
    GrSt: label_AitmContnsHorzn_GrStAry200.csv

correct_NEng: !!bool false # falls true, nur einmal ausführen!
korrekturfaktor_NEng: !!int 60

# Train_test_Split
test_size: !!float 0.1
split_data_path: Preprocessed_data
split_data_names:
  train_samples: !!str train_samples
  train_ground_truth: !!str train_ground_truth
  test_samples: !!str test_samples
  test_ground_truth: !!str test_ground_truth
  data_format: !!str .csv  # .npy
  api: !!str _f_api_  # bei sequentiell nur: _

# MinMaxScaler
scaler_path: scaler
scaler_format: .save
scaler_feature_range:
  min: !!float 0.0001
  max: !!float 0.9999
num_inputs: 11
GrSt_no_scaling: !!bool true  # true: Der Kanal GrSt wird nicht mit skaliert, da für Klassifikation nicht notwendig, false: Kanal Grst wird mit skaliert für reines Regressionsmodell
num_outputs: 4 # 5 für sequenzielles Modell ohne Klassifizierung
# Auswahl des Kanals im Pythonfile Z.214
